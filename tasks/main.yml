# RedHat Family
- block:
    # dependencies
    - block:
        - name: package dependencies
          ansible.builtin.package:
            name:
              - "npm"
            state: present
          tags: ['cdktf', 'serverless', 'terraform', 'terraformcdk']
          when: serverless|bool or terraform|bool

    # helm
    - block:
        - set_fact:
            helm_checksum: "{{ lookup('url', 'https://get.helm.sh/helm-v' +item +'-linux-amd64.tar.gz.sha256', split_lines=False) | trim }}"
          with_items:
            - "{{ helm_version }}"

        - name: helm - download
          get_url:
            url: "https://get.helm.sh/helm-v{{ helm_version }}-linux-amd64.tar.gz"
            dest: "/usr/local/src/helm-v{{ helm_version }}-linux-amd64.tar.gz"
            owner: root
            group: root
            mode: 0744
            seuser: system_u
            serole: object_r
            setype: usr_t
            selevel: s0
            checksum: "sha256:{{ helm_checksum }}"

        - name: helm - unarchive
          unarchive:
            src: "/usr/local/src/helm-v{{ helm_version }}-linux-amd64.tar.gz"
            dest: /usr/local/src
            remote_src: True

        - name: helm - copy binary
          copy:
            src: /usr/local/src/linux-amd64/helm
            dest: /usr/local/bin/helm
            remote_src: yes
            owner: root
            group: root
            mode: 0755
            seuser: system_u
            serole: object_r
            setype: bin_t
            selevel: s0

        - name: helm - cleanup
          file:
            path: "{{ item }}"
            state: absent
          with_items:
            - "/usr/local/src/linux-amd64/"
            - "/usr/local/src/helm-v{{ helm_version }}-linux-amd64.tar.gz"

      when: helm
      tags:
        - helm
        - kubernetes

    #eks tools
    - block:
        # aws-iam-authenticator (formerly heptio-authenticator-aws)
        - name: aws-iam-authenticator
          get_url:
            url: "https://github.com/kubernetes-sigs/aws-iam-authenticator/releases/download/v{{ aws_iam_auth_version }}/aws-iam-authenticator_{{ aws_iam_auth_version }}_linux_amd64"
            dest: "/usr/local/bin/aws-iam-authenticator"
            owner: root
            group: root
            mode: 0755
            seuser: system_u
            serole: object_r
            setype: bin_t
            selevel: s0
            checksum: "sha256:{{ aws_iam_auth_checksum }}"

        - name: eksctl - download
          get_url:
            url: "https://github.com/weaveworks/eksctl/releases/download/{{ eksctl_version }}/eksctl_Linux_amd64.tar.gz"
            dest: /usr/local/src/eksctl_Linux_amd64.zip
            owner: root
            group: root
            mode: 0744
            seuser: system_u
            serole: object_r
            setype: usr_t
            selevel: s0
            checksum: "sha256:{{ eksctl_version_checksum }}"

        - name: eksctl - unarchive
          unarchive:
            src: /usr/local/src/eksctl_Linux_amd64.zip
            dest: /usr/local/bin
            remote_src: True

        - name: eksctl - set permissions
          file:
            path: /usr/local/bin/eksctl
            state: file
            owner: root
            group: root
            mode: 0755
            seuser: system_u
            serole: object_r
            setype: bin_t
            selevel: s0

        - name: eksctl - cleanup
          file:
            path: "{{ item }}"
            state: absent
          with_items:
            - "/usr/local/src/eksctl_Linux_amd64.zip"

      when: eks
      tags:
        - aws
        - eks
        - aws-iam-authenticator
        - eksctl
        - kubernetes

    # kubectl
    - block:
        - name: kubectl - copy google-cloud-sdk.repo
          copy:
            src: google-cloud-sdk.repo
            dest: /etc/yum.repos.d/google-cloud-sdk.repo
            owner: root
            group: root
            mode: 0644
            seuser: system_u
            serole: object_r
            setype: system_conf_t
            selevel: s0

        - name: kubectl - install
          package:
            name: kubectl
            state: present

        - name: kubectl - bash autocompletion - ensure bash-completion is installed
          package:
            name: "bash-completion"
            state: present

        - name: kubectl - bash autocompletion - touch /etc/bash_completion.d/kubectl
          file:
            path: /etc/bash_completion.d/kubectl
            state: touch
            owner: root
            group: root
            mode: 0644
            seuser: system_u
            serole: object_r
            setype: etc_t
            selevel: s0

        - name: kubectl - generage bash autocompletion
          shell: 'kubectl completion bash > /etc/bash_completion.d/kubectl'

      when: kubectl or kops
      tags:
        - kubectl
        - kops
        - kubernetes

    # kops
    - block:
        - name: kops - set fact for kops sha1
          set_fact:
            kops_checksum: "{{ lookup('url','https://github.com/kubernetes/kops/releases/download/v' +item +'/kops-linux-amd64-sha1', split_lines=False) | trim }}"
          with_items:
            - "{{ kops_version }}"

        - name: kops - download
          get_url:
            url: "https://github.com/kubernetes/kops/releases/download/v{{ kops_version }}/kops-linux-amd64"
            dest: /usr/local/bin/kops
            force: yes
            owner: root
            group: root
            mode: 0755
            seuser: system_u
            serole: object_r
            setype: bin_t
            selevel: s0
            checksum: "sha1:{{ kops_checksum }}"

      when: kops
      tags:
        - kops
        - kubernetes

    # Packer
    - block:
        - name: packer - download
          get_url:
            url: https://releases.hashicorp.com/packer/{{ packer_version }}/packer_{{ packer_version }}_linux_amd64.zip
            dest: /usr/local/src/packer_{{ packer_version }}_linux_amd64.zip
            owner: root
            group: root
            mode: 0744
            seuser: system_u
            serole: object_r
            setype: usr_t
            selevel: s0
            checksum: "sha256:{{ packer_version_checksum }}"

        - name: packer - unarchive
          unarchive:
            src: /usr/local/src/packer_{{ packer_version }}_linux_amd64.zip
            dest: /usr/local/bin
            remote_src: True

        - name: packer - set permissions
          file:
            path: /usr/local/bin/packer
            state: file
            owner: root
            group: root
            mode: 0755
            seuser: system_u
            serole: object_r
            setype: bin_t
            selevel: s0

        - name: packer - cleanup
          file:
            path: "{{ item }}"
            state: absent
          with_items:
            - "/usr/local/src/packer_{{ packer_version }}_linux_amd64.zip"

      when: packer
      tags: packer

    # Serverless
    - block:
        - name: Install serverless node.js package globally
          npm:
            name: serverless
            state: latest
            global: yes

      when: serverless
      tags: serverless

    # Terraform
    - block:
        - name: terraform - download
          get_url:
            url: https://releases.hashicorp.com/terraform/{{ tf_version }}/terraform_{{ tf_version }}_linux_amd64.zip
            dest: /usr/local/src/terraform_{{ tf_version }}_linux_amd64.zip
            owner: root
            group: root
            mode: 0744
            seuser: system_u
            serole: object_r
            setype: usr_t
            selevel: s0
            checksum: "sha256:{{ tf_version_checksum }}"

        - name: terraform - unarchive
          unarchive:
            src: /usr/local/src/terraform_{{ tf_version }}_linux_amd64.zip
            dest: /usr/local/bin
            remote_src: True

        - name: terraform - set permissions
          file:
            path: /usr/local/bin/terraform
            state: file
            owner: root
            group: root
            mode: 0755
            seuser: system_u
            serole: object_r
            setype: bin_t
            selevel: s0

        - name: terraform - cleanup
          file:
            path: "{{ item }}"
            state: absent
          with_items:
            - "/usr/local/src/terraform_{{ tf_version }}_linux_amd64.zip"

        - name: terraform cdk - install cdktf-cli node.js package globally
          community.general.npm:
            name: cdktf-cli
            state: latest
            global: yes
          tags: ['cdktf', 'terraformcdk']

      when: terraform
      tags: terraform

    # Vault
    - block:
        - name: vault - download
          get_url:
            url: https://releases.hashicorp.com/vault/{{ vault_version }}/vault_{{ vault_version }}_linux_amd64.zip
            dest: /usr/local/src/vault_{{ vault_version }}_linux_amd64.zip
            owner: root
            group: root
            mode: 0744
            seuser: system_u
            serole: object_r
            setype: usr_t
            selevel: s0
            checksum: "sha256:{{ vault_version_checksum }}"

        - name: vault - unarchive
          unarchive:
            src: /usr/local/src/vault_{{ vault_version }}_linux_amd64.zip
            dest: /usr/local/bin
            remote_src: True

        - name: vault - set permissions
          file:
            path: /usr/local/bin/vault
            state: file
            owner: root
            group: root
            mode: 0755
            seuser: system_u
            serole: object_r
            setype: bin_t
            selevel: s0

        - name: vault - cleanup
          file:
            path: "{{ item }}"
            state: absent
          with_items:
            - "/usr/local/src/vault_{{ vault_version }}_linux_amd64.zip"

      when: vault
      tags: vault

  when: ansible_os_family == "RedHat"
